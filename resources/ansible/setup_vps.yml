---
- name: Configure NydusNet VPS
  hosts: all # This will target the IP passed dynamically from your app
  become: yes
  vars:
    # --- These variables will be set by your Python application ---
    # Example values are shown, but they should be passed in or defined elsewhere.
    user_public_key_path: "~/.ssh/id_rsa.pub"
    certbot_email: "your-email@example.com"
    heartbeat_secret_key: "a-very-strong-random-secret"

  tasks:
    - name: Update apt cache and install required packages
      apt:
        name:
          - nginx-extras # Includes the Lua module for the PHP-less heartbeat
          - certbot
          - python3-certbot-nginx
          - fail2ban
          - ufw
        state: present
        update_cache: yes
      tags: ['packages']

    - name: Create the restricted 'tunnel' user
      user:
        name: tunnel
        shell: /bin/bash
        password_lock: yes
      tags: ['user']

    - name: Set up authorized key for the tunnel user
      authorized_key:
        user: tunnel
        state: present
        key: "{{ lookup('file', user_public_key_path) }}"
        key_options: 'command="/usr/local/bin/setup_tunnel.sh; sleep infinity"'
      tags: ['user', 'ssh']

    - name: Deploy the setup_tunnel.sh script
      template:
        src: files/setup_tunnel.sh.j2
        dest: /usr/local/bin/setup_tunnel.sh
        owner: root
        group: root
        mode: '0755'
      tags: ['script']

    - name: Grant specific sudo permissions to the tunnel user
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^tunnel ALL='
        line: "tunnel ALL=(ALL) NOPASSWD: /usr/sbin/nginx -s reload, /usr/bin/tee /etc/nginx/sites-available/*, /usr/bin/ln -sfn /etc/nginx/sites-available/* /etc/nginx/sites-enabled/, /usr/sbin/nginx -t, /usr/bin/certbot *"
        validate: 'visudo -cf %s'
      tags: ['user', 'security']

    - name: Create heartbeat directory with correct permissions
      file:
        path: /var/www/heartbeats
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
      tags: ['nginx', 'heartbeat']

    - name: Deploy the Nginx heartbeat configuration
      template:
        src: files/nginx_heartbeat.conf.j2
        dest: /etc/nginx/conf.d/heartbeat.conf
      notify: Reload Nginx
      tags: ['nginx', 'heartbeat']

    - name: Allow SSH and Nginx through the firewall
      ufw:
        rule: allow
        name: "{{ item }}"
      loop:
        - 'OpenSSH'
        - 'Nginx Full' # UFW profile for both port 80 and 443
      tags: ['firewall']

    - name: Enable the firewall
      ufw:
        state: enabled
      tags: ['firewall']

    - name: Ensure Nginx service is started and enabled
      service:
        name: nginx
        state: started
        enabled: yes
      tags: ['nginx']

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded
